"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/security-console.ts":
/*!*********************************!*\
  !*** ./app/security-console.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\n * üîí Console Security - VIBE CODING\n * Prote√ß√£o contra tentativas de invas√£o via console do navegador\n */ if (true) {\n    // Desabilitar console em produ√ß√£o\n    const isProduction = \"development\" === \"production\";\n    if (isProduction) {\n        // Sobrescrever m√©todos do console\n        const noop = ()=>{};\n        console.log = noop;\n        console.debug = noop;\n        console.info = noop;\n        console.trace = noop;\n        console.table = noop;\n        console.dir = noop;\n        console.dirxml = noop;\n        console.group = noop;\n        console.groupCollapsed = noop;\n        console.groupEnd = noop;\n        console.time = noop;\n        console.timeEnd = noop;\n        console.timeLog = noop;\n        console.count = noop;\n        console.countReset = noop;\n        console.clear = noop;\n        // Manter apenas warn e error com mensagem gen√©rica\n        console.warn = ()=>console.warn(\"‚ö†Ô∏è Aviso\");\n        console.error = ()=>console.error(\"‚ùå Erro\");\n    }\n    // Mensagem de aviso no console\n    const styles = [\n        \"color: #ff0000\",\n        \"font-size: 40px\",\n        \"font-weight: bold\",\n        \"text-shadow: 2px 2px 4px rgba(0,0,0,0.5)\"\n    ].join(\";\");\n    const stylesSubtitle = [\n        \"color: #ff6b00\",\n        \"font-size: 20px\",\n        \"font-weight: bold\"\n    ].join(\";\");\n    const stylesWarning = [\n        \"color: #ffaa00\",\n        \"font-size: 16px\",\n        \"font-weight: normal\"\n    ].join(\";\");\n    console.log(\"%c\\uD83D\\uDEE1Ô∏è CHUPA SEU CORNO AQUI \\xc9 VIBE CODING \\uD83D\\uDE80\", styles);\n    console.log(\"%c‚ö†Ô∏è AVISO DE SEGURAN\\xc7A\", stylesSubtitle);\n    console.log(\"%cEsta \\xe9 uma \\xe1rea restrita para desenvolvedores.\\n\" + \"Se algu\\xe9m te pediu para copiar/colar algo aqui, \\xe9 GOLPE!\\n\" + \"Voc\\xea pode estar dando acesso \\xe0 sua conta.\\n\\n\" + \"Todas as tentativas de invas\\xe3o s\\xe3o monitoradas e registradas.\", stylesWarning);\n    // Detectar tentativas de manipula√ß√£o do console\n    const originalLog = console.log;\n    const originalWarn = console.warn;\n    const originalError = console.error;\n    // Bloquear acesso a dados sens√≠veis\n    if (!isProduction) {\n        // Detectar comandos suspeitos\n        const suspiciousPatterns = [\n            /document\\.cookie/i,\n            /localStorage/i,\n            /sessionStorage/i,\n            /\\.token/i,\n            /password/i,\n            /supabase.*key/i,\n            /NEXT_PUBLIC/i,\n            /auth/i,\n            /session/i\n        ];\n        // Interceptar console.log\n        console.log = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            const message = args.join(\" \");\n            if (suspiciousPatterns.some((pattern)=>pattern.test(message))) {\n                originalWarn.call(console, \"\\uD83D\\uDEA8 TENTATIVA DE INVAS\\xc3O DETECTADA!\");\n                originalWarn.call(console, \"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n                originalWarn.call(console, \"Comando bloqueado\");\n                return;\n            }\n            originalLog.apply(console, args);\n        };\n    }\n    // Proteger contra debugger (apenas em produ√ß√£o)\n    if (isProduction) {\n        setInterval(()=>{\n            const start = performance.now();\n            debugger; // eslint-disable-line no-debugger\n            const end = performance.now();\n            // Se levou muito tempo, algu√©m est√° debugando\n            if (end - start > 100) {\n                console.warn(\"\\uD83D\\uDEA8 Debugger detectado!\");\n                console.warn(\"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n            }\n        }, 5000) // A cada 5 segundos para n√£o sobrecarregar\n        ;\n    }\n    // Detectar tentativas de inje√ß√£o de script\n    const observer = new MutationObserver((mutations)=>{\n        mutations.forEach((mutation)=>{\n            mutation.addedNodes.forEach((node)=>{\n                if (node.nodeName === \"SCRIPT\") {\n                    const scriptElement = node;\n                    if (!scriptElement.src.includes(\"localhost\") && !scriptElement.src.includes(\"supabase.co\") && !scriptElement.src.includes(\"vercel.app\")) {\n                        console.warn(\"\\uD83D\\uDEA8 Script externo detectado!\");\n                        console.warn(\"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n                        console.warn(\"Script bloqueado:\", scriptElement.src);\n                        scriptElement.remove();\n                    }\n                }\n            });\n        });\n    });\n    observer.observe(document.documentElement, {\n        childList: true,\n        subtree: true\n    });\n    // Proteger localStorage e sessionStorage\n    const originalSetItem = Storage.prototype.setItem;\n    Storage.prototype.setItem = function(key, value) {\n        // Permitir apenas em desenvolvimento ou para dados n√£o sens√≠veis\n        if (isProduction && (key.includes(\"token\") || key.includes(\"password\") || key.includes(\"key\"))) {\n            console.warn(\"\\uD83D\\uDEA8 Tentativa de armazenar dados sens\\xedveis bloqueada!\");\n            console.warn(\"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n            return;\n        }\n        return originalSetItem.call(this, key, value);\n    };\n    // Bloquear eval e Function em produ√ß√£o\n    if (isProduction) {\n        window.eval = function() {\n            console.warn(\"\\uD83D\\uDEA8 eval() bloqueado em produ\\xe7\\xe3o!\");\n            console.warn(\"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n            throw new Error(\"eval() n\\xe3o permitido\");\n        };\n        window.Function = function() {\n            console.warn(\"\\uD83D\\uDEA8 Function() bloqueado em produ\\xe7\\xe3o!\");\n            console.warn(\"\\uD83D\\uDEE1Ô∏è Chupa seu corno aqui \\xe9 VIBE CODING \\uD83D\\uDE80\");\n            throw new Error(\"Function() n\\xe3o permitido\");\n        };\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/security-console.ts\n"));

/***/ })

});